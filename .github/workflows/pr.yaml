on: pull_request
name: Review
jobs:
    test-composer-files:
        name: Validate composer (PHP ${{ matrix.php }})
        runs-on: ubuntu-20.04
        strategy:
            fail-fast: false
            matrix:
                php: ['7.3', '7.4']
        steps:
            -   uses: actions/checkout@master
            -   name: Setup PHP, with composer and extensions
                uses: shivammathur/setup-php@master
                with:
                    php-version: ${{ matrix.php }}
                    extension-csv: ctype, dom, iconv, json
                    coverage: none
            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            -   uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ matrix.php }}-composer-
            -   name: Validate composer files
                run: composer validate composer.json

    runner-phpcs:
        name: runner-phpcs (PHP ${{ matrix.php }})
        runs-on: ubuntu-20.04
        strategy:
            fail-fast: false
            matrix:
                php: ['7.3', '7.4']
        steps:
            - uses: actions/checkout@master
            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@master
              with:
                  php-version: ${{ matrix.php }}
                  extension-csv: ctype, dom, iconv, json
                  coverage: none
            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            -   uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ matrix.php }}-composer-
            - name: Install Reviewdog
              run: wget -O - -q https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b $PWD/ v0.9.14
            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
            - name: PHPCS
              run: composer actions/phpcs | ./reviewdog -f=checkstyle -name=PHPCS -reporter=github-pr-check
              env:
                  REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    phpcsfixer:
        name: PHP-CS-FIXER (PHP ${{ matrix.php }})
        runs-on: ubuntu-20.04
        strategy:
            fail-fast: false
            matrix:
                php: ['7.3', '7.4']
        steps:
            - uses: actions/checkout@master
            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@master
              with:
                  php-version: ${{ matrix.php }}
                  extension-csv: ctype, dom, iconv, json
                  coverage: none
            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            -   uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ matrix.php }}-composer-
            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
            - name: phpcsfixerr
              run: composer actions/phpcsfixer

    twigcs:
        name: TwigCS (PHP ${{ matrix.php }})
        runs-on: ubuntu-20.04
        strategy:
            fail-fast: false
            matrix:
                php: ['7.3', '7.4']
        steps:
            - uses: actions/checkout@master
            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@master
              with:
                  php-version: ${{ matrix.php }}
                  extension-csv: ctype, dom, iconv, json
                  coverage: none
            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"
            -   uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ matrix.php }}-composer-
            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
            - name: twigcs
              run: composer actions/twigcs

    js-coding-standards:
        name: JS coding standards
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@master
            - uses: actions/setup-node@v1
              with:
                  node-version: '10.x'
            - name: install
              run: yarn install
            - name: JS coding standards
              run: yarn check-coding-standards

    test-yarn-build:
        name: Test yarn build assets
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@master

            - name: Get yarn cache directory
              id: yarn-cache
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v1
              with:
                  path: ${{ steps.yarn-cache.outputs.dir }}
                  key: yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: yarn-

            - name: Install yarn packages
              run: docker run -v $PWD:/app:rw -v ${{ steps.yarn-cache.outputs.dir }}:/usr/local/share/.cache/yarn/v6:rw itkdev/yarn:14 install

            - name: Build assets
              run: docker run -v $PWD:/app:rw -v ${{ steps.yarn-cache.outputs.dir }}:/usr/local/share/.cache/yarn/v6:rw itkdev/yarn:14 build
